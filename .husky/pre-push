#!/usr/bin/env sh

# An example hook script to verify what is about to be pushed.  Called by "git

# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

regex_commit_id_abbrev="^[a-z0-9]{8,9}"

get_commit_list() {
	# Regexs
	regex_validate="^(feat|fix|chg|del|dep|sec|ver)(?:\(([\w\\$\.\-\*\s]*)\))?:\s.{3,}"
	regex_skip_validate="$regex_commit_id_abbrev ((Merge)|int:)\s.*"

	# Filter commits
	commit=$(git rev-list --oneline "$range" --grep "$regex_validate" -P -i --invert-grep)
	echo "$commit" | grep -viE "$regex_skip_validate"
}

sha_oneline() {
	echo "$1" | grep -Po "$regex_commit_id_abbrev"
}

while read local_ref local_oid remote_ref remote_oid; do
	# git_current_branch=$(git branch --show-current)
	# # remote_oid dont work in eclipse
	# remote_oid=$(git rev-parse origin/"$git_current_branch" 2> /dev/null || false)
	#
	# if [ "$?" -ne 0 ]
	# then
	#   remote_oid=$(git rev-parse origin/develop)
	# fi

	if test "$remote_oid" = "$zero"; then
		remote_oid=$(git rev-parse origin/develop)
	fi

	if test "$local_oid" = "$zero"; then
		# TODO: Handle delete
		:
	else
		range="$remote_oid..$local_oid"

		printf "\n"
		printf "[  Validating commit messages:  ] %s..%s" "$(sha_oneline "$remote_oid")" "$(sha_oneline "$local_oid")"
		printf "\n\n"

		# Check for CHANGELOG commit
		if [ -n "$(get_commit_list)" ]; then
			printf >&2 "\n"
			printf >&2 "[  ERROR  ] Found commit that does not match with the pattern defined in 'Changelog procedures' (Notion wiki) in $local_ref, not pushing"
			printf >&2 "\n\n"

			# how to skip validation
			printf >&2 "[  INFO  ] To skip validation for one commit, use this pattern: 'int: <anything>'"
			printf >&2 "\n\n"

			printf >&2 "The commits below do not match with the pattern"
			printf >&2 "\n\n"
			printf >&2 ">>>>>>>"
			printf >&2 "\n\n"
			printf >&2 "%b" "$(get_commit_list)"
			printf >&2 "\n\n"
			printf >&2 "<<<<<<<"
			printf >&2 "\n\n"
			exit 1
		fi

		printf "[  Â¡PUSH COMMITS SUCCEEDED!  ]"
		printf "\n\n"
	fi
done

exit 0
